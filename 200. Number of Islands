class Solution {   
    private boolean[][] visited;
    public int numIslands(char[][] grid) {
        int counter = 0;
        for (int i = 0; i < grid.length; i ++) {
            for (int j = 0; j < grid[i].length; j ++) {
                if (grid[i][j] == '1') {
                    neighbor(grid, i, j);
                    counter ++;                  
                }
            }
        }
     return counter;   
    }  
    public void neighbor(char[][] grid, int row, int col) {
        if (row < 0||col < 0 || row >grid.length - 1 || col > grid[0].length - 1) return;
        if (grid[row][col] == '1') {
                    grid[row][col] = 'X';
                    neighbor(grid, row + 1, col);
                    neighbor(grid, row - 1, col);
                    neighbor(grid, row, col + 1);
                    neighbor(grid, row, col - 1);

    }
}
}
    

@alexander 
class Solution {
    public int[] pourWater(int[] heights, int V, int K) {
        while (V-- > 0)
            drop(heights, K, heights[K] + 1, true, true);
        return heights;
    }
   private boolean drop(int[] h, int i, int j, boolean l, boolean r) {
        if (l && i > 0            && h[i - 1] <= h[i] && drop(h, i - 1, h[i], l, false)) return true;
        if (r && i < h.length - 1 && h[i + 1] <= h[i] && drop(h, i + 1, h[i], false, r)) return true;

        if (h[i] == j) return false;
        h[i]++;
        return true;
    }
}


My solution:
class Solution {
    public int[] pourWater(int[] heights, int V, int K) {
        int pointer = K;
        
         for (int i = 0; i < V; i ++) {
             boolean dropLeft = false;
             pointer = K;
             int water_pt = pointer;
            heights[pointer] = heights[pointer] + 1;
            while (pointer - 1 >= 0 && heights[pointer-1] <= (heights[water_pt] - 1)) {
                while (pointer >= 1 && heights[pointer -1] == (heights[water_pt] - 1))
                    pointer --;
                if (pointer == 0 ||heights[pointer-1] > (heights[water_pt] - 1)) break;
                else {
                    heights[water_pt] --;
                    heights[pointer - 1] ++;
                    pointer --;
                    water_pt = pointer;
                    dropLeft = true;
                }
            }
            if (!dropLeft) {
                pointer = K;
                
                while (pointer + 1 < heights.length && heights[pointer + 1] <= (heights[water_pt] - 1)) {
                while (pointer < heights.length -1 && heights[pointer + 1] == (heights[water_pt] - 1))
                    pointer = pointer + 1;
                if (pointer == heights.length - 1 || heights[pointer+1] > (heights[water_pt] - 1)) break;
                else {
                    heights[water_pt] = heights[water_pt] - 1;
                    heights[pointer+1] = heights[pointer+1] + 1;
                    pointer ++;
                    water_pt = pointer;
                }
            }
            }

        }
        return heights;
    }
}


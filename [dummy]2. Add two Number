/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
 
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode temp1 = l1;
        ListNode temp2 = l2;
        ListNode result = new ListNode(0);
        ListNode r_result = result;
            while (temp1 != null || temp2 != null) {
                if (temp1 != null) {
                    result.val += temp1.val;
                    temp1 = temp1.next;
                }
                if (temp2 != null) {
                    result.val += temp2.val;
                    temp2 = temp2.next;
                }
                if (temp1 == null && temp2 == null) break;
                result.next = new ListNode(result.val/10);
                result.val = result.val % 10;
                result = result.next;
            }

            return r_result;
    }
}

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(0);
        ListNode cur = dummy;
        int sum = 0;
        while (l1 != null || l2 != null ) {
            cur.next = new ListNode(0);
            cur = cur.next;
            if (l1 != null) {
                sum += l1.val;
                l1 = l1.next;
            }
            if (l2 != null) {
                sum += l2.val;
                l2 = l2.next;
            }
            cur.val = sum % 10;
            sum = sum / 10;
        }
        if (sum != 0) cur.next = new ListNode(sum);
        return dummy.next;
    }
}
